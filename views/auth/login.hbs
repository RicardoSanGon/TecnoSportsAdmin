<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            min-height: 100vh;
        }
        .login-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .input-field {
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .input-field:focus {
            background: white;
            border-color: #059669;
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
        }
        .btn-primary {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(16, 185, 129, 0.3);
        }
        .loading {
            display: none;
        }
        .loading.show {
            display: flex;
        }
    </style>
</head>
<body class="flex items-center justify-center p-4">
    <div class="w-full max-w-md">
        <!-- Logo y Título -->
        <div class="text-center mb-8">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-white rounded-full shadow-lg mb-4">
                <i class="fas fa-shield-alt text-3xl text-green-600"></i>
            </div>
            <h1 class="text-3xl font-bold text-white mb-2">TecnoSports</h1>
            <p class="text-green-100">Panel de Administración</p>
        </div>

        <!-- Tarjeta de Login -->
        <div class="login-card rounded-2xl shadow-2xl p-8">
            <div class="text-center mb-6">
                <h2 class="text-2xl font-bold text-gray-800 mb-2">Iniciar Sesión</h2>
                <p class="text-gray-600">Acceso exclusivo para administradores</p>
            </div>

            <!-- Mensaje de Error -->
            <div id="errorMessage" class="hidden mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-lg">
                <i class="fas fa-exclamation-circle mr-2"></i>
                <span id="errorText"></span>
            </div>

            <!-- Formulario de Login -->
            <form id="loginForm">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-envelope mr-2 text-gray-500"></i>Correo Electrónico
                    </label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        required
                        class="input-field w-full px-4 py-3 rounded-lg focus:outline-none"
                        placeholder="admin@tecnosports.com"
                    >
                </div>

                <div class="mb-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-lock mr-2 text-gray-500"></i>Contraseña
                    </label>
                    <div class="relative">
                        <input
                            type="password"
                            id="password"
                            name="password"
                            required
                            class="input-field w-full px-4 py-3 pr-12 rounded-lg focus:outline-none"
                            placeholder="••••••••"
                        >
                        <button
                            type="button"
                            id="togglePassword"
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700"
                        >
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>

                <button
                    type="submit"
                    id="loginBtn"
                    class="btn-primary w-full py-3 px-4 rounded-lg text-white font-medium focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
                >
                    <span id="btnText">
                        <i class="fas fa-sign-in-alt mr-2"></i>Iniciar Sesión
                    </span>
                    <span id="loadingSpinner" class="loading">
                        <i class="fas fa-spinner fa-spin mr-2"></i>Verificando...
                    </span>
                </button>
            </form>

            <!-- Información adicional -->
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600">
                    <i class="fas fa-info-circle mr-1"></i>
                    Solo usuarios con rol de Administrador pueden acceder
                </p>
            </div>
        </div>

        <!-- Footer -->
        <div class="text-center mt-8">
            <p class="text-green-100 text-sm">
                © 2025 TecnoSports - Panel de Administración
            </p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginForm = document.getElementById('loginForm');
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const loginBtn = document.getElementById('loginBtn');
            const btnText = document.getElementById('btnText');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const errorMessage = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            const togglePassword = document.getElementById('togglePassword');

            // Toggle password visibility
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.type === 'password' ? 'text' : 'password';
                passwordInput.type = type;
                this.querySelector('i').className = type === 'password' ? 'fas fa-eye' : 'fas fa-eye-slash';
            });

            // Show error message
            function showError(message) {
                errorText.textContent = message;
                errorMessage.classList.remove('hidden');
                setTimeout(() => {
                    errorMessage.classList.add('hidden');
                }, 5000);
            }

            // Show loading state
            function setLoading(loading) {
                if (loading) {
                    btnText.classList.add('hidden');
                    loadingSpinner.classList.add('show');
                    loginBtn.disabled = true;
                    emailInput.disabled = true;
                    passwordInput.disabled = true;
                } else {
                    btnText.classList.remove('hidden');
                    loadingSpinner.classList.remove('show');
                    loginBtn.disabled = false;
                    emailInput.disabled = false;
                    passwordInput.disabled = false;
                }
            }

            // Handle form submission
            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                const email = emailInput.value.trim();
                const password = passwordInput.value;

                if (!email || !password) {
                    showError('Por favor complete todos los campos');
                    return;
                }

                setLoading(true);

                try {
                    console.log('Attempting login...');

                    const response = await fetch('/auth/signin', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ email, password }),
                    });

                    const data = await response.json();
                    console.log('Login response:', data);

                    if (response.ok && data.session?.access_token) {
                        // Store Supabase token in localStorage
                        localStorage.setItem('authToken', data.session.access_token);

                        console.log('Login successful:', data);

                        // Use userProfile from response if available, otherwise use default
                        const userProfile = data.userProfile || {
                            id: data.user.id,
                            email: data.user.email,
                            name: data.user.user_metadata?.name || data.user.email.split('@')[0],
                            roleId: 3, // Default role
                        };

                        // Store user info
                        localStorage.setItem('user', JSON.stringify(userProfile));

                        console.log('User profile stored:', userProfile);

                        // Check admin role
                        if (userProfile.roleId === 2) {
                            console.log('Admin user, redirecting to dashboard...');
                            showNotification('¡Bienvenido Administrador! Redirigiendo al dashboard...', 'success');
                            setTimeout(() => {
                                // Include token in URL for server-side authentication
                                const token = data.session.access_token;
                                window.location.href = `/admin/dashboard?token=${encodeURIComponent(token)}`;
                            }, 1500);
                        } else {
                            console.log('User authenticated but needs admin role, redirecting to welcome page...');
                            showNotification('¡Bienvenido! Redirigiendo...', 'success');
                            setTimeout(() => {
                                window.location.href = '/admin/welcome';
                            }, 1500);
                        }

                    } else {
                        const errorMsg = data.error?.message || 'Credenciales inválidas';
                        showError(errorMsg);
                    }

                } catch (error) {
                    console.error('Login error:', error);
                    showError('Error de conexión. Intente nuevamente.');
                } finally {
                    setLoading(false);
                }
            });

            // Show notification function
            function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transform translate-x-full transition-transform duration-300 ${
                    type === 'success' ? 'bg-green-500' :
                    type === 'error' ? 'bg-red-500' : 'bg-blue-500'
                } text-white max-w-sm`;

                notification.innerHTML = `
                    <div class="flex items-center">
                        <i class="fas ${
                            type === 'success' ? 'fa-check-circle' :
                            type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'
                        } mr-2"></i>
                        <span>${message}</span>
                    </div>
                `;

                document.body.appendChild(notification);

                setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                }, 100);

                setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 3000);
            }

            // Check if user is already logged in
            const token = localStorage.getItem('authToken');
            if (token) {
                console.log('User already logged in, redirecting...');
                window.location.href = '/admin/dashboard';
            }

            // Focus on email input
            emailInput.focus();
        });
    </script>
</body>
</html>
